Index: src/renderer/RayTracerBasic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package renderer;\r\n\r\nimport geometries.Intersectable.GeoPoint;\r\nimport lighting.LightSource;\r\nimport primitives.*;\r\nimport scene.Scene;\r\n\r\nimport java.util.List;\r\n\r\nimport static primitives.Util.alignZero;\r\nimport static primitives.Util.isZero;\r\n\r\n/**\r\n\r\n * @Param DELTA - a const parameter for ray-head offset size for shading rays.\r\n * @Param MAX_CALC_COLOR_LEVEL - max color of transparencies or reflections.\r\n * @Param MIN_CALC_COLOR_K - min color of transparencies or reflections.\r\n * Rey tracer\r\n * calculate the color ray-geometry intersection\r\n */\r\npublic class RayTracerBasic extends RayTracerBase {\r\n\r\n    private static final double DELTA = 0.1;\r\n    private static final int MAX_CALC_COLOR_LEVEL = 10;\r\n    private static final double MIN_CALC_COLOR_K = 0.001;\r\n    private static final Double3 INITIAL_K = Double3.ONE;\r\n\r\n\r\n\r\n    /**\r\n     * ctor - initializing the scene parameter\r\n     * uses super ctor\r\n     *\r\n     * @param scene\r\n     */\r\n    public RayTracerBasic(Scene scene) {\r\n        super(scene);\r\n    }\r\n\r\n\r\n//    /**\r\n//     * According to the pong model\r\n//     * This model is additive in which we connect all the components that will eventually\r\n//     * make up an image with background colors, self-colors and texture colors.\r\n//     *\r\n//     * @param geoPoint the geometry and the lighted point at him\r\n//     * @param ray      the ray that goes out of the camera\r\n//     * @return the color at the point\r\n//     */\r\n//    private Color calcColor(GeoPoint geoPoint, Ray ray) {\r\n//        if (geoPoint == null) {\r\n//            return scene.background;\r\n//        }\r\n//        return scene.ambientLight.getIntensity()\r\n//                .add(geoPoint.geometry.getEmission())\r\n//                .add(calcLocalEffects(geoPoint, ray))\r\n//                .add(calcGlobalEffects(geoPoint, ray));\r\n//    }\r\n\r\n    private Color calcColor(GeoPoint gp, Ray ray) {\r\n        return calcColor(gp, ray, MAX_CALC_COLOR_LEVEL, INITIAL_K)\r\n                .add(scene.ambientLight.getIntensity());\r\n    }\r\n\r\n//    private Color calcColor(GeoPoint gp, Ray ray, int level, Double3 k) {\r\n//        Color color = calcLocalEffects(gp, ray,k);\r\n//        return  1 == level? color: color.add(calcGlobalEffects(gp, ray, level, k));\r\n//    }\r\n\r\n    private Color calcColor(GeoPoint geoPoint, Ray ray, int level, Double3 k) {\r\n        Color color = geoPoint.geometry.getEmission();\r\n\r\n        Vector v = ray.getDir();\r\n        Vector n = geoPoint.geometry.getNormal(geoPoint.point);\r\n\r\n        // check that ray is not parallel to geometry\r\n        double nv = alignZero(n.dotProduct(v));\r\n\r\n        if (isZero(nv)) {\r\n            return color;\r\n        }\r\n        Material material = geoPoint.geometry.getMaterial();\r\n        color = color.add(calcLocalEffects(geoPoint, /*material,*/ ray, k));\r\n        return 1 == level ? color : color.add(calcGlobalEffects(geoPoint, ray,level, k));\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Computer lighting effects as at a certain point on geometry\r\n     *\r\n     * @param intersection the geometry and the lighted point at him\r\n     * @param ray          the ray from the camera\r\n     * @return the total color at the point including the specular and diffusive\r\n     */\r\n    private Color calcLocalEffects(GeoPoint intersection, Ray ray, Double3 k) {\r\n        Color color = Color.BLACK;\r\n        Vector v = ray.getDir();\r\n        Vector n = intersection.geometry.getNormal(intersection.point); //normal to point\r\n        double nv = alignZero(n.dotProduct(v));\r\n        if (nv == 0) //vectors orthogonal - no effect\r\n            return color;\r\n        Material material = intersection.geometry.getMaterial();\r\n\r\n        for (LightSource lightSource : scene.lights) { //sum of all effects of all lights on scene\r\n            Vector l = lightSource.getL(intersection.point);\r\n            double nl = alignZero(n.dotProduct(l));\r\n            if (nl * nv > 0) { // sign(nl) == sing(nv)\r\n                Double3 ktr = transparency(intersection, lightSource,l, n );\r\n                if (!ktr.product(k).lowerThan(MIN_CALC_COLOR_K)) {\r\n                    Color iL = lightSource.getIntensity(intersection.point).scale(ktr);\r\n                    color = color.add(iL.scale(calcDiffusive(material, nl)),\r\n                            iL.scale(calcSpecular(material, n, l, v)));\r\n                }\r\n\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n\r\n    private Color calcGlobalEffects(GeoPoint intersection, Ray ray, int level, Double3 k) {\r\n        Color color = Color.BLACK;\r\n        Material mat = intersection.geometry.getMaterial();\r\n        Double3 kr = mat.getkR(), kkr = k.product(kr);\r\n\r\n        Vector v = ray.getDir();\r\n        Vector n = intersection.geometry.getNormal(intersection.point); //normal to point\r\n\r\n        Ray reflectedRay = constructReflectedRay(intersection.point, v, n);\r\n        GeoPoint reflectedPoint = findClosestIntersection(reflectedRay);\r\n        if (!mat.getkR().lowerThan(MIN_CALC_COLOR_K))\r\n            color = color.add(calcColor(reflectedPoint ,  reflectedRay, level -1, kkr).scale(kr));\r\n\r\n        Ray refractedRay = constructRefractedRay(intersection.point, v,n);\r\n        GeoPoint refractedPoint = findClosestIntersection(refractedRay);\r\n        Double3 kt = mat.getkR(), kkt = k.product(kt);\r\n        if (!mat.getkR().lowerThan(MIN_CALC_COLOR_K))\r\n            color = color.add(calcColor(refractedPoint, refractedRay, level-1,kkt).scale(kt));\r\n\r\n        return color;\r\n    }\r\n\r\n\r\n    /**\r\n     * Calculation of specular light component\r\n     *\r\n     * @param material - Attenuation coefficient for specular light component\r\n     * @param n        - normal to point\r\n     * @param l        - direction vector from light to point\r\n     * @param v        - direction of ray shooted to point\r\n     * @return Color - the calculated color of specular light component\r\n     */\r\n    private Double3 calcSpecular(Material material, Vector n, Vector l, Vector v) {\r\n        Vector r = l.subtract(n.scale(2 * l.dotProduct(n))).normalize();\r\n        return material.kS.scale(Math.pow(Math.max(0, v.scale(-1).dotProduct(r)), material.nShininess));\r\n    }\r\n\r\n    /**\r\n     * Calculation of diffusion light component\r\n     *\r\n     * @param material - normal to point\r\n     * @param nl       - dot product between n-normal to point and l-direction vector from light to point\r\n     * @return Color - the calculated color of diffusion light component\r\n     */\r\n    private Double3 calcDiffusive(Material material, double nl) {\r\n        return material.kD.scale(Math.abs(nl));\r\n    }\r\n\r\n    /**\r\n     * Trace the ray and calculates the color of the point that interact with the geometries of the scene\r\n     *\r\n     * @param ray the ray that came out of the camera\r\n     * @return the color of the object that the ray is interact with\r\n     */\r\n    public Color TraceRay(Ray ray) {\r\n        GeoPoint clossestGeoPoint = findClosestIntersection(ray);\r\n        if (clossestGeoPoint == null)\r\n            return scene.background;\r\n\r\n        return calcColor(clossestGeoPoint, ray);\r\n    }\r\n\r\n    /**\r\n     * Checks if a point is unshaded by other geometries with respect to a specific light source.\r\n     *\r\n     * @param gp          the point and its associated geometry\r\n     * @param lightSource the light source\r\n     * @param l           the direction vector from the light source to the point\r\n     * @param n           the normal vector at the point\r\n     * @return {@code true} if the point is unshaded, {@code false} otherwise\r\n     */\r\n    private Double3 transparency(GeoPoint gp, LightSource lightSource, Vector l, Vector n) {\r\n        Vector lightDirection = l.scale(-1); // from point to light source\r\n        double nl = n.dotProduct(lightDirection);\r\n\r\n        Ray lightRay = new Ray(gp.point, lightDirection, n);\r\n\r\n        double maxDistanceSquared = lightSource.getDistance(gp.point) * lightSource.getDistance(gp.point);\r\n        List<GeoPoint> intersections = scene.geometries.findGeoIntersections(lightRay);\r\n        if (intersections == null) {\r\n            return Double3.ONE;\r\n        }\r\n        Double3 ktr = Double3.ONE;\r\n\r\n\r\n        for (GeoPoint geoPoint : intersections) {\r\n            double distance = geoPoint.point.distanceSquared(gp.point);\r\n            if (distance < maxDistanceSquared) {\r\n                Double3 kT = geoPoint.geometry.getMaterial().getkT();\r\n                ktr = ktr.add(ktr.product(kT));\r\n                return Double3.ZERO;\r\n\r\n            }\r\n        }\r\n\r\n        return ktr;\r\n    }\r\n\r\n    private Ray constructReflectedRay(Point pointGeo, Vector v, Vector n) {\r\n        double vn = v.dotProduct(n);\r\n\r\n        if (vn == 0) {\r\n            return null;\r\n        }\r\n\r\n        Vector r = v.subtract(n.scale(2 * vn));\r\n        return new Ray(pointGeo, n, r);\r\n    }\r\n\r\n    private Ray constructRefractedRay(Point point, Vector v, Vector n) {\r\n        return new Ray(point, n, v);\r\n    }\r\n\r\n    private GeoPoint findClosestIntersection(Ray ray){\r\n        List<GeoPoint> intersection = scene.geometries.findGeoIntersections(ray);\r\n        if (intersection ==null)\r\n            return null;\r\n        return ray.findClosestGeoPoint(intersection);\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/renderer/RayTracerBasic.java b/src/renderer/RayTracerBasic.java
--- a/src/renderer/RayTracerBasic.java	(revision ce81a8fab99d0c57e20b19e23990ac33cfbf93ef)
+++ b/src/renderer/RayTracerBasic.java	(date 1685969454321)
@@ -80,7 +80,7 @@
             return color;
         }
         Material material = geoPoint.geometry.getMaterial();
-        color = color.add(calcLocalEffects(geoPoint, /*material,*/ ray, k));
+        color = color.add(calcLocalEffects(geoPoint, ray, k));
         return 1 == level ? color : color.add(calcGlobalEffects(geoPoint, ray,level, k));
     }
 
@@ -205,9 +205,11 @@
 
         for (GeoPoint geoPoint : intersections) {
             double distance = geoPoint.point.distanceSquared(gp.point);
+
             if (distance < maxDistanceSquared) {
                 Double3 kT = geoPoint.geometry.getMaterial().getkT();
-                ktr = ktr.add(ktr.product(kT));
+                ktr =ktr.product(kT);
+//                ktr = ktr.add(ktr.product(kT));
                 return Double3.ZERO;
 
             }
@@ -216,6 +218,33 @@
         return ktr;
     }
 
+
+//    private Double3 transparency(GeoPoint gp, LightSource lightSource, Vector l, Vector n) {
+//        // Pay attention to your method of distance screening
+//        Vector lightDirection = l.scale(-1); // from point to light source
+//        Point point = gp.point;
+//        Ray lightRay = new Ray(point, n, lightDirection);
+//
+//        double maxdistance = lightSource.getDistance(point);
+//        List<GeoPoint> intersections = scene.geometries.findGeoIntersections(lightRay);
+//
+//        if (intersections == null)
+//            return Double3.ONE;
+//
+//        Double3 ktr = Double3.ONE;
+////        loop over intersections and for each intersection which is closer to the
+////        point than the light source multiply ktr by 𝒌𝑻 of its geometry.
+////        Performance:
+////        if you get close to 0 –it’s time to get out( return 0)
+//        for (var geo : intersections) {
+//            ktr = ktr.product(geo.geometry.getMaterial().getkT());
+//            if (ktr.lowerThan(MIN_CALC_COLOR_K)) {
+//                return Double3.ZERO;
+//            }
+//        }
+//        return ktr;
+//    }
+
     private Ray constructReflectedRay(Point pointGeo, Vector v, Vector n) {
         double vn = v.dotProduct(n);
 
@@ -233,10 +262,11 @@
 
     private GeoPoint findClosestIntersection(Ray ray){
         List<GeoPoint> intersection = scene.geometries.findGeoIntersections(ray);
-        if (intersection ==null)
+        if (intersection == null)
             return null;
         return ray.findClosestGeoPoint(intersection);
     }
 
 
+
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"eee3868d-2277-4911-b9dc-11043c08b6a7\" name=\"Changes\" comment=\"PR07 part 2 - transparency and reflection\">\r\n      <change afterPath=\"$PROJECT_DIR$/unittests/renderer/ReflectionRefractionTests.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/renderer/RayTracerBasic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/renderer/RayTracerBasic.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NLQkCG42V8CfG3NfbOFdnWTlxw\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;true&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;last_directory_selection&quot;: &quot;C:/Users/Tehila Benezra/IdeaProjects/ISE5783_2132_5321/unittests/renderer&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;fileTemplates&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"lighting\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"lighting\" />\r\n      <recent name=\"renderer\" />\r\n      <recent name=\"primitives\" />\r\n      <recent name=\"geometries\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.All in ISE5783_2132_5321\">\r\n    <configuration name=\"All in ISE5783_2132_5321\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_2132_5321\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LightTests\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_2132_5321\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"lighting.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"lighting\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"lighting.LightTests\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LightsTests\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_2132_5321\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"lighting.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"lighting\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"lighting.LightsTests\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlaneTests\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_2132_5321\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"geometries.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"geometries\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"geometries.PlaneTests\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ShadowTests\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_2132_5321\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"lighting.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"lighting\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"lighting.ShadowTests\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.All in ISE5783_2132_5321\" />\r\n        <item itemvalue=\"JUnit.ShadowTests\" />\r\n        <item itemvalue=\"JUnit.LightTests\" />\r\n        <item itemvalue=\"JUnit.LightsTests\" />\r\n        <item itemvalue=\"JUnit.PlaneTests\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"eee3868d-2277-4911-b9dc-11043c08b6a7\" name=\"Changes\" comment=\"\" />\r\n      <created>1679441029306</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679441029306</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00001\" summary=\"1st stage\">\r\n      <created>1679443688382</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679443688382</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00002\" summary=\"1st stage edits\">\r\n      <created>1679817312104</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679817312104</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00003\" summary=\"tag PR01\">\r\n      <created>1679999541618</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679999541618</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00004\" summary=\"tag PR02\">\r\n      <created>1681755695319</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681755695319</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00005\" summary=\"edits pr02\">\r\n      <created>1681837617508</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681837617509</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00006\" summary=\"edits pr02\">\r\n      <created>1681850965613</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681850965613</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00007\" summary=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\r\n      <created>1681851352027</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681851352027</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00008\" summary=\"plane first tc\">\r\n      <created>1681998472666</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681998472666</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00009\" summary=\"PRO3 A+B\">\r\n      <created>1682344891953</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1682344891953</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00010\" summary=\"PRO3 A+B edits\">\r\n      <created>1683044889909</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1683044889909</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00011\" summary=\"tag PRO4\">\r\n      <created>1683630406288</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1683630406288</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00012\" summary=\"PRO5 - need to fix rendertest\">\r\n      <created>1683639299166</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1683639299166</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00013\" summary=\"tag PR06\">\r\n      <created>1684657001010</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1684657001010</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00014\" summary=\"tag PR06\">\r\n      <created>1684657509751</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1684657509751</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00015\" summary=\"tag PR06 updated\">\r\n      <created>1684826676351</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1684826676351</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00016\" summary=\"PR07 part 2 - transparency and reflection\">\r\n      <created>1685936020623</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1685936020623</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"17\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"1st stage\" />\r\n    <MESSAGE value=\"1st stage edits\" />\r\n    <MESSAGE value=\"tag PR01\" />\r\n    <MESSAGE value=\"tag PR02\" />\r\n    <MESSAGE value=\"edits pr02\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\" />\r\n    <MESSAGE value=\"plane first tc\" />\r\n    <MESSAGE value=\"PRO3 A+B\" />\r\n    <MESSAGE value=\"PRO3 A+B edits\" />\r\n    <MESSAGE value=\"tag PRO4\" />\r\n    <MESSAGE value=\"PRO5 - need to fix rendertest\" />\r\n    <MESSAGE value=\"tag PR06\" />\r\n    <MESSAGE value=\"tag PR06 updated\" />\r\n    <MESSAGE value=\"PR07 part 2 - transparency and reflection\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"PR07 part 2 - transparency and reflection\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ce81a8fab99d0c57e20b19e23990ac33cfbf93ef)
+++ b/.idea/workspace.xml	(date 1685969488227)
@@ -4,8 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="eee3868d-2277-4911-b9dc-11043c08b6a7" name="Changes" comment="PR07 part 2 - transparency and reflection">
-      <change afterPath="$PROJECT_DIR$/unittests/renderer/ReflectionRefractionTests.java" afterDir="false" />
+    <list default="true" id="eee3868d-2277-4911-b9dc-11043c08b6a7" name="Changes" comment="Merge remote-tracking branch 'origin/master'">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/renderer/RayTracerBasic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/RayTracerBasic.java" afterDir="false" />
     </list>
@@ -278,7 +277,28 @@
       <option name="project" value="LOCAL‎" />
       <updated>1685936020623</updated>
     </task>
-    <option name="localTasksCounter" value="17" />
+    <task id="LOCAL‎-00017" summary="PR07 part 2 - transparency and reflection edits">
+      <created>1685960238426</created>
+      <option name="number" value="00017" />
+      <option name="presentableId" value="LOCAL‎-00017" />
+      <option name="project" value="LOCAL‎" />
+      <updated>1685960238426</updated>
+    </task>
+    <task id="LOCAL‎-00018" summary="PR07 part 2 - transparency and reflection edits">
+      <created>1685960261247</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL‎-00018" />
+      <option name="project" value="LOCAL‎" />
+      <updated>1685960261247</updated>
+    </task>
+    <task id="LOCAL‎-00019" summary="Merge remote-tracking branch 'origin/master'">
+      <created>1685960312398</created>
+      <option name="number" value="00019" />
+      <option name="presentableId" value="LOCAL‎-00019" />
+      <option name="project" value="LOCAL‎" />
+      <updated>1685960312398</updated>
+    </task>
+    <option name="localTasksCounter" value="20" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -308,6 +328,8 @@
     <MESSAGE value="tag PR06" />
     <MESSAGE value="tag PR06 updated" />
     <MESSAGE value="PR07 part 2 - transparency and reflection" />
-    <option name="LAST_COMMIT_MESSAGE" value="PR07 part 2 - transparency and reflection" />
+    <MESSAGE value="PR07 part 2 - transparency and reflection edits" />
+    <MESSAGE value="Merge remote-tracking branch 'origin/master'" />
+    <option name="LAST_COMMIT_MESSAGE" value="Merge remote-tracking branch 'origin/master'" />
   </component>
 </project>
\ No newline at end of file
